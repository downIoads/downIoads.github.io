<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rpi on Blog for Tech Enjoyers</title>
    <link>http://localhost:1313/tags/rpi/</link>
    <description>Recent content in Rpi on Blog for Tech Enjoyers</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jan 2024 18:00:23 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/rpi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automated self-hosted GitLab backups to Dropbox using a Python script on Raspberry Pi</title>
      <link>http://localhost:1313/posts/python-gitlab-backup-rpi/</link>
      <pubDate>Tue, 02 Jan 2024 18:00:23 +0200</pubDate>
      <guid>http://localhost:1313/posts/python-gitlab-backup-rpi/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;I prefer self-hosted GitLab over uploading my code to GitHub. The only disadvantage is that I need to take care of backups myself in case a hard drive dies or gets stolen. Therefore, I wrote a simple Python script that runs on my Raspberry Pi twice a week, which backs up my GitLab config and data and uploads them to my Dropbox. Specifically, I am using the free community edition of GitLab on my RPI. GitLab backups consist of two parts: There is the config (which includes the keys needed to decrypt the data backup) backup and the data backup. Technically, it is recommended to store these two backups separately, but I do not have any sensitive data in my GitLab projects, I just want to prevent data loss. This is why my script backs up both config and data backup into the same Dropbox account. In order for this script to work, you must set up a Dropbox app by using the &lt;a href=&#34;https://www.dropbox.com/developers&#34;&gt;Dropbox developer site&lt;/a&gt;. I would recommend limiting the scope of the app into a single folder. This way, the token you put into the Python script can only read and write data to this folder and the rest of the Dropbox is untouched. Note that the token you can generate on the website where you adjust your Dropbox App settings is only temporary (a few hours) and will not be used by this script. Instead, read through &lt;a href=&#34;https://www.dropboxforum.com/t5/Dropbox-API-Support-Feedback/Issue-in-generating-access-token/m-p/592921/highlight/true#M27586&#34;&gt;this reply&lt;/a&gt; to learn how to use this token to get a permanent refresh token. The script itself then uses this refresh token to get a new authorization token each time it runs. The authorization token you get will always be valid for a few hours (which is enough for the script) and then become invalid. To sum it up: There is a &amp;ldquo;refresh token&amp;rdquo; which is used to request new &amp;ldquo;authorization tokens&amp;rdquo; and the authorization tokens are what you need to be able to access your Dropbox. I had to read lots of threads and documentation until I found the working answer that I linked above to figure this out.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
