<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MacOS on Blog for Tech Enjoyers</title>
    <link>http://localhost:1313/tags/macos/</link>
    <description>Recent content in MacOS on Blog for Tech Enjoyers</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Jan 2024 14:00:23 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/macos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Minimalistic SwiftUI GUI for Yt-dlp</title>
      <link>http://localhost:1313/posts/swiftui-ytdl/</link>
      <pubDate>Sat, 13 Jan 2024 14:00:23 +0200</pubDate>
      <guid>http://localhost:1313/posts/swiftui-ytdl/</guid>
      <description>Introduction Yt-dlp and ffmpeg and two of my favorite command-line tools. But I keep having to look up how to use them! For this reason, I made a simple SwiftUI GUI that has three simple commands built-in. The user only has to choose and output folder and a file type (mp3 [audio only], opus [audio only] and mkv [audio and video]) and click the download button. The binaries for yt-dlp and ffmpeg are downloaded from the most official sources I could find at runtime.</description>
    </item>
    <item>
      <title>Wxwidgets macOS guide to compile universal binaries</title>
      <link>http://localhost:1313/posts/wxwidget-macos-universal-binary/</link>
      <pubDate>Wed, 25 Oct 2023 14:00:23 +0200</pubDate>
      <guid>http://localhost:1313/posts/wxwidget-macos-universal-binary/</guid>
      <description>Introduction I wanted to publish my wxwidgets project &amp;ldquo;D2R Runeword Calculator&amp;rdquo; which I already blogged about, to the macOS App Store. In order to do this with wxwidgets, you are advised to create statically-linked binaries that run both on x86_64 and arm64. But the instructions in the wxwidgets tutorials are outdated and lack crucial information. It took me a few hours, but I figured out how it can be done on macOS Ventura (13.</description>
    </item>
    <item>
      <title>Hackintosh #3: Running Sonoma on XPS 9370 (i7 8550u - 4k display)</title>
      <link>http://localhost:1313/posts/hackintosh-xps9370/</link>
      <pubDate>Tue, 24 Oct 2023 08:00:23 +0200</pubDate>
      <guid>http://localhost:1313/posts/hackintosh-xps9370/</guid>
      <description>Introduction macOS Sonoma is the newest macOS version (which always is a challenge for Hackintosh) and installing it on an older laptop is an extra challenge. In this post I will talk about how I successfully hackintoshed the XPS 9370. Note that currently online installers do not work for Sonoma, so you require an Apple machine or a Hackintosh to create an offline installer (first you create a FAT32 partition called EFI (Size around 200MB), then you make an Mac OS Extended (Journaled) partition called MyVolume, then you follow this Apple guide).</description>
    </item>
    <item>
      <title>Hackintosh #2: Running Ventura using Haswell CPU and a spoofed AMD RX 6650 XT</title>
      <link>http://localhost:1313/posts/hackintosh-ventura-rx6650xt/</link>
      <pubDate>Tue, 10 Oct 2023 08:00:23 +0200</pubDate>
      <guid>http://localhost:1313/posts/hackintosh-ventura-rx6650xt/</guid>
      <description>Introduction In my previous post, I wrote about how I used the following hardware to run Monterey (an older macOS version):&#xA;Intel i5 4400 (Haswell) MSI B85-G41 Intel AX210 BT/Wi-Fi As you can see, this build did not have a dGPU. For this reason, I bought an AMD RX 6650 XT and added it to this computer. This GPU officially is not supported either (so it would have been easier to get an AMD RX 6600 instead), but you can do GPU ID spoofing to make it work.</description>
    </item>
    <item>
      <title>Hackintosh in 2023</title>
      <link>http://localhost:1313/posts/hackintosh-project1/</link>
      <pubDate>Mon, 02 Oct 2023 08:00:23 +0200</pubDate>
      <guid>http://localhost:1313/posts/hackintosh-project1/</guid>
      <description>Introduction I always enjoy testing different tech-related things, such as different OSes. Having used Windows, Linux, iOS and Android, I thought it was about time I tried macOS for the first time. I prefer not to be trapped within Apple&amp;rsquo;s walled garden, so instead of purchasing a Mac, I tried to give new life to old hardware I still had laying around. In the context of Hackintosh, it is important to know which hardware is supported for what.</description>
    </item>
  </channel>
</rss>
