<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on Blog for Tech Enjoyers</title>
    <link>http://localhost:1313/tags/windows/</link>
    <description>Recent content in Windows on Blog for Tech Enjoyers</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Feb 2024 14:00:23 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Running Windows 98 SE in Vmware Workstation on modern hardware</title>
      <link>http://localhost:1313/posts/win98-se-vmware/</link>
      <pubDate>Tue, 13 Feb 2024 14:00:23 +0200</pubDate>
      <guid>http://localhost:1313/posts/win98-se-vmware/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Remember the good old days when your OS did not annoy you with ads or features you never asked for? When everything seemed minimalistic and lightweight, and it did not feel as if every mouse movement you make gets data mined and sent to Microsoft servers? I found an old Win98 SE (Second Edition, 4.10.2222A) install disc, created an image and tried to set it up using VMware Workstation 16. This blog post is about the general setup and a few tricks to make it work. It is not as easy to spin up as let&amp;rsquo;s say a Win XP VM, but when you get it working it runs flawlessly (except that there is no 3D acceleration with stops some but not all games from running).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Stable Diffusion as Discord Emote Generator</title>
      <link>http://localhost:1313/posts/stable-diffusion-gopher/</link>
      <pubDate>Fri, 20 Oct 2023 22:50:00 +0200</pubDate>
      <guid>http://localhost:1313/posts/stable-diffusion-gopher/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Stable Diffusion is an open-source deep learning text-to-image model that does not have any filters and works offline. There are a few controversies around it (e.g., it has been trained on copyrighted artwork but gives the user of Stable Diffusion the rights to all images it spits out, and it does not have filters and can be used to create all sorts of weird content). It works offline and poses a threat to existing businesses that sell AI-generated images (e.g., OpenAI&amp;rsquo;s closed-source DALLE-3). It is harder to use than, e.g., DALL-E because there are a lot of settings to adjust, which makes it highly customizable but also harder to use. I recently tried using Stable Diffusion again because &lt;a href=&#34;https://developer.nvidia.com/blog/unlock-faster-image-generation-in-stable-diffusion-web-ui-with-nvidia-tensorrt/&#34;&gt;NVIDIA published new Game Ready drivers for their RTX GPUs, which greatly increases Stable Diffusion&amp;rsquo;s performance&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Blocking Twitch Ads by piping the stream to VLC</title>
      <link>http://localhost:1313/posts/twitch-adblock-streamlink/</link>
      <pubDate>Sat, 14 Oct 2023 08:00:23 +0200</pubDate>
      <guid>http://localhost:1313/posts/twitch-adblock-streamlink/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Twitch keeps changing their backend, and it recently became more difficult to block ads. A few years ago, any ad blocker seemed to work just fine. Then they changed their code, and uBlock Origin, Adblock Plus, etc. all fail to remove ads. While there are still browser plugins that promise to block Twitch ads, many of them are potentially shady, as they route your traffic over some proxy server that does who-knows-what. Since I don&amp;rsquo;t like routing my traffic over shady servers and I want to avoid testing browser extensions that have way too many privileges, I tried to find a different approach. In this post, I will talk about two approaches:&lt;/p&gt;</description>
    </item>
    <item>
      <title>C&#43;&#43; runeword calculator GUI for Diablo 2 Resurrected</title>
      <link>http://localhost:1313/posts/d2-runewords/</link>
      <pubDate>Thu, 27 Jul 2023 22:50:00 +0200</pubDate>
      <guid>http://localhost:1313/posts/d2-runewords/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Diablo 2 Resurrected is one of my favorite games of all time, but there are a lot of things you need to remember. There are various online tools (the idea of a runeword calculator is not new), but many of them have a terrible User Interface, are outdated, or are located on slow websites that autoplay Twitch streams when you open them. So I decided to learn how to use wxWidgets by making an assistant GUI tool for my favorite game! I have open-sourced this tool, and you can download it from this &lt;a href=&#34;https://github.com/downIoads/cpp_diablo2r_runewordCalculator/tree/main&#34;&gt;Github repo&lt;/a&gt;. The repo contains the source code and you can build it yourself. The tool has been tested on Windows 11, Ubuntu 22.04.3 LTS and macOS Ventura and Sonoma. It also is available for 4.99â‚¬ on the macOS App Store (best option if you are lazy).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python script for Llama 2 conversations</title>
      <link>http://localhost:1313/posts/llama-python/</link>
      <pubDate>Wed, 26 Jul 2023 18:00:23 +0200</pubDate>
      <guid>http://localhost:1313/posts/llama-python/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;I have played around a bit with the new Llama 2 LLM, more specifically with the 13B parameter Huggingface version that you can download &lt;a href=&#34;https://huggingface.co/TheBloke/Llama-2-13B-chat-GGML/resolve/main/llama-2-13b-chat.ggmlv3.q4_0.bin&#34;&gt;here&lt;/a&gt;. In order to run it, check out &lt;a href=&#34;https://github.com/ggerganov/llama.cpp&#34;&gt;Llama.cpp&lt;/a&gt;. It has precise setup instructions, so I will assume you get that running on your own. What I did not enjoy was having to type long commands into my Windows cmd every time, so I decided to write a short Python script that runs the process in the background and displays the output in the Python shell in real-time (well, almost). Windows paths are weird, especially when you try to put them in a Python string. Double-escaping \ did not seem to work, so I had to go with raw strings instead. Let&amp;rsquo;s take a look at the script I am using:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
