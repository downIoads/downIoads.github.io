<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Blog for Tech Enjoyers</title>
    <link>http://localhost:1313/tags/go/</link>
    <description>Recent content in Go on Blog for Tech Enjoyers</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 2024 20:00:00 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to use APNs with Golang and Google Firebase &#43; Firestore</title>
      <link>http://localhost:1313/posts/golang-firebase-apns/</link>
      <pubDate>Mon, 01 Jan 2024 20:00:00 +0200</pubDate>
      <guid>http://localhost:1313/posts/golang-firebase-apns/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;If you are building a SwiftUI app like me, you will probably encounter a situation where you want to be able to send out Push Notifications to your users. Google Firebase offers a free plan (completely free with pretty generous usage) that allows you to do just that. Combined with Google Firestore you even get a small database where you can store device tokens (your users will write their device token to the database by using your app, and you send out notifications to all device tokens). This post is not about the Google Firebase / Firestore setup, but here is a note: If you directly go to the Firestore website and try to create an account it will force you to give them your payment info even if you choose the free plan. But if you just create a Firebase account with the Spark plan (free), you will be able to access Firestore from your dashboard without ever giving out your payment information. This can be useful as you might make a mistake in your Firestore Rules setup which allows anyone to write to it, which potentially could lead to very large bills. But if you never gave Google your payment info, you do not have to worry about scenarios such as this one. So let&amp;rsquo;s look at the Golang code I use to send out APNs notifications to my users.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Golang&#39;s unintuitive pitfalls</title>
      <link>http://localhost:1313/posts/golang-unintuitive-pitfalls/</link>
      <pubDate>Fri, 28 Jul 2023 08:00:23 +0200</pubDate>
      <guid>http://localhost:1313/posts/golang-unintuitive-pitfalls/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Disclaimer: I have just recently picked up the language, so don&amp;rsquo;t expect this post to be a deep analysis of advanced Golang concepts. Instead, think of it as the perception of Golang from someone who already knows other programming languages but just recently started to learn Go. As with most things, there is stuff that I really like about Golang, and there are quite a few things that truly annoy me. Let&amp;rsquo;s do the feedback sandwich thing:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to calculate any weekday</title>
      <link>http://localhost:1313/posts/how-to-calculate-any-weekday/</link>
      <pubDate>Tue, 04 Jul 2023 20:00:00 +0200</pubDate>
      <guid>http://localhost:1313/posts/how-to-calculate-any-weekday/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;I once read about a simple way to calculate what day of the week any given date is. All you need to do is remember a few numbers and do basic math in your head. So let&amp;rsquo;s get started!&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-you-need-to-remember&#34;&gt;What you need to remember&lt;/h2&gt;&#xA;&lt;p&gt;Each weekday has an assigned number:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Sunday = 0&lt;/li&gt;&#xA;&lt;li&gt;Monday = 1&lt;/li&gt;&#xA;&lt;li&gt;Tuesday = 2&lt;/li&gt;&#xA;&lt;li&gt;Wednesday = 3&lt;/li&gt;&#xA;&lt;li&gt;Thursday = 4&lt;/li&gt;&#xA;&lt;li&gt;Friday = 5&lt;/li&gt;&#xA;&lt;li&gt;Saturday = 6&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Also remember the following list for the months:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
